from pwn import *
from sympy.ntheory.modular import crt
from gmpy2 import iroot


r = remote('tjc.tf', 31628)
m = int(r.recvline().decode('utf-8').strip()[3:])
n = int(r.recvline().decode('utf-8').strip()[3:])

min_hsh = '0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000'
min_hsh = 115792089237316195423570985008687907853269984665640564039457584007913129639936
max_hsh = '0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111'
max_hsh = 231584178474632390847141970017375815706539969331281128078915168015826259279871

assert pow(min_hsh, 7) < n and pow(min_hsh, 8) > n
assert pow(max_hsh, 7) < n and pow(max_hsh, 8) > n

e = 8
C = []
N = []

for _ in range(e):
    r = remote('tjc.tf', 31628)
    m = int(r.recvline().decode('utf-8').strip()[3:])
    n = int(r.recvline().decode('utf-8').strip()[3:])
    C.append(m)
    N.append(n)

hsh = iroot(crt(N, C)[0], e)

r = remote('tjc.tf', 31628)
r.recvline()
r.recvline()
r.sendline(str(hsh[0]).encode())
print(r.recvall())